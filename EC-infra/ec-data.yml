services:
  # zookeeper:
    # image: confluentinc/cp-zookeeper:7.5.0
    # container_name: zookeeper
    # environment:
      # ZOOKEEPER_CLIENT_PORT: 2181
      # ZOOKEEPER_TICK_TIME: 2000
    # ports:
      # - "2181:2181"
    # volumes:
      # - /d/EC/zk-data:/var/lib/zookeeper
      # - /d/EC/zk_datalog:/datalog

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    # depends_on:
      # - zookeeper
    networks:
      - default
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CLUSTER_ID: YpE2F0XoTj2xZf6mS4eLmg
      CLUSTER_ID: YpE2F0XoTj2xZf6mS4eLmg
      KAFKA_KRAFT_MODE: "true"  # 新增此行
    volumes:
      - /d/EC/kafka-data:/var/lib/kafka/data
  kowl:
    image: quay.io/cloudhut/kowl:latest
    container_name: kowl
    depends_on:
      # - zookeeper
      - kafka
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKERS=kafka:9092
    volumes:
      -  /d/EC/kowl-storage:/data
     
  console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: redpanda-console
    ports:
      - "8085:8080"
    environment:
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - kafka     
  # kafdrop:
    # image: obsidiandynamics/kafdrop
    # container_name: kafdrop
    # depends_on:
      # - zookeeper
      # - kafka
    # restart: unless-stopped
    # ports:
      # - "9000:9000"
    # environment:
      # ZK_HOSTS: zookeeper:2181
      # KAFKA_BROKERCONNECT: kafka:9092
      
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - /d/EC/Data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6600:6379"
    volumes:
      - /d/EC/redisdata:/data

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - /d/EC/grafana-storage:/var/lib/grafana

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - "9100:9100"
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:
  grafana-storage:
  kowl-storage:
  kafka-data:
  zk-data: